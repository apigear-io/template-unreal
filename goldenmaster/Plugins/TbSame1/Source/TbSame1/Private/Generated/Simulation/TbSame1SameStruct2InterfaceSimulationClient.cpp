/**
Copyright 2021 ApiGear UG
Copyright 2021 Epic Games, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

////////////////////////////////
// WARNING AUTOGENERATED
// DO NOT MODIFY
///////////////////////////////

#include "TbSame1SameStruct2InterfaceSimulationClient.h"
#include "Generated/api/TbSame1.json.adapter.h"
#include "ApiGear/Public/ApiGearConnectionManager.h"
#include "unrealsimulation.h"
#include "Async/Async.h"
#include "Engine/Engine.h"

using namespace ApiGear::JSONRPC;
UTbSame1SameStruct2InterfaceSimulationClient::UTbSame1SameStruct2InterfaceSimulationClient()
	: ITbSame1SameStruct2InterfaceInterface()
{
}

void UTbSame1SameStruct2InterfaceSimulationClient::Initialize(FSubsystemCollectionBase& Collection)
{
	Super::Initialize(Collection);

	UApiGearConnectionManager* AGCM = nullptr;
	if (GEngine != nullptr)
	{
		AGCM = GEngine->GetEngineSubsystem<UApiGearConnectionManager>();
	}
	NotifyRequestFunc SameStruct2InterfaceStateChangedFunc = [this](NotifyRequestArg arg)
	{
		const json fields = arg.params;
		if (fields.contains("prop1"))
		{
			if (Prop1 != fields["prop1"].get<FTbSame1Struct2>())
			{
				Prop1 = fields["prop1"].get<FTbSame1Struct2>();
				Execute_BroadcastProp1Changed(this, Prop1);
			}
		}
		if (fields.contains("prop2"))
		{
			if (Prop2 != fields["prop2"].get<FTbSame1Struct2>())
			{
				Prop2 = fields["prop2"].get<FTbSame1Struct2>();
				Execute_BroadcastProp2Changed(this, Prop2);
			}
		}
	};
	if (AGCM != nullptr)
	{
		AGCM->GetSimulationConnection()->Connect();
		AGCM->GetSimulationConnection()->onNotifyState("tb.same1/SameStruct2Interface", SameStruct2InterfaceStateChangedFunc);
	}

	CallResponseFunc GetSameStruct2InterfaceStateFunc = [this](CallResponseArg arg)
	{
		if (arg.result.size() != 1)
		{
			return;
		}
		const json fields = arg.result;
		if (fields.contains("prop1"))
		{
			if (Prop1 != fields["prop1"].get<FTbSame1Struct2>())
			{
				Prop1 = fields["prop1"].get<FTbSame1Struct2>();
				Execute_BroadcastProp1Changed(this, Prop1);
			}
		}
		if (fields.contains("prop2"))
		{
			if (Prop2 != fields["prop2"].get<FTbSame1Struct2>())
			{
				Prop2 = fields["prop2"].get<FTbSame1Struct2>();
				Execute_BroadcastProp2Changed(this, Prop2);
			}
		}
	};
	if (AGCM != nullptr)
	{
		AGCM->GetSimulationConnection()->doFetchState("tb.same1/SameStruct2Interface", GetSameStruct2InterfaceStateFunc);
	}

	// register notification callback functions, signal/event -> fcn
	NotifyRequestFunc sig1Func = [this](NotifyRequestArg arg)
	{
		const json fields = arg.params;
		if (fields.contains("param1"))
		{
			Execute_BroadcastSig1(this, fields["param1"].get<FTbSame1Struct1>());
		}
	};
	if (AGCM != nullptr)
	{
		AGCM->GetSimulationConnection()->onNotify("tb.same1/SameStruct2Interface#sig1", sig1Func);
	}

	NotifyRequestFunc sig2Func = [this](NotifyRequestArg arg)
	{
		const json fields = arg.params;
		if (fields.contains("param1") && fields.contains("param2"))
		{
			Execute_BroadcastSig2(this, fields["param1"].get<FTbSame1Struct1>(), fields["param2"].get<FTbSame1Struct2>());
		}
	};
	if (AGCM != nullptr)
	{
		AGCM->GetSimulationConnection()->onNotify("tb.same1/SameStruct2Interface#sig2", sig2Func);
	}
}

void UTbSame1SameStruct2InterfaceSimulationClient::Deinitialize()
{
	Super::Deinitialize();

	if (GEngine != nullptr)
	{
		UApiGearConnectionManager* AGCM = GEngine->GetEngineSubsystem<UApiGearConnectionManager>();
		AGCM->GetSimulationConnection()->RemoveOnNotifyState("tb.same1/SameStruct2Interface");
		// unregister notification callback functions
		AGCM->GetSimulationConnection()->RemoveOnNotify("tb.same1/SameStruct2Interface#sig1");
		AGCM->GetSimulationConnection()->RemoveOnNotify("tb.same1/SameStruct2Interface#sig2");
	}
}

void UTbSame1SameStruct2InterfaceSimulationClient::BroadcastSig1_Implementation(const FTbSame1Struct1& Param1)
{
	Sig1Signal.Broadcast(Param1);
}

FTbSame1SameStruct2InterfaceSig1Delegate& UTbSame1SameStruct2InterfaceSimulationClient::GetSig1SignalDelegate()
{
	return Sig1Signal;
}

void UTbSame1SameStruct2InterfaceSimulationClient::BroadcastSig2_Implementation(const FTbSame1Struct1& Param1, const FTbSame1Struct2& Param2)
{
	Sig2Signal.Broadcast(Param1, Param2);
}

FTbSame1SameStruct2InterfaceSig2Delegate& UTbSame1SameStruct2InterfaceSimulationClient::GetSig2SignalDelegate()
{
	return Sig2Signal;
}

void UTbSame1SameStruct2InterfaceSimulationClient::BroadcastProp1Changed_Implementation(const FTbSame1Struct2& InProp1)
{
	Prop1 = InProp1;
	Prop1Changed.Broadcast(InProp1);
}

FTbSame1Struct2 UTbSame1SameStruct2InterfaceSimulationClient::GetProp1_Implementation() const
{
	return Prop1;
}

void UTbSame1SameStruct2InterfaceSimulationClient::SetProp1_Implementation(const FTbSame1Struct2& InProp1)
{
	Params params;
	params["prop1"] = InProp1;
	if (GEngine != nullptr)
	{
		UApiGearConnectionManager* AGCM = GEngine->GetEngineSubsystem<UApiGearConnectionManager>();
		AGCM->GetSimulationConnection()->doCall("tb.same1/SameStruct2Interface", "_set", params);
	}
}

FTbSame1SameStruct2InterfaceProp1ChangedDelegate& UTbSame1SameStruct2InterfaceSimulationClient::GetProp1ChangedDelegate()
{
	return Prop1Changed;
}

void UTbSame1SameStruct2InterfaceSimulationClient::BroadcastProp2Changed_Implementation(const FTbSame1Struct2& InProp2)
{
	Prop2 = InProp2;
	Prop2Changed.Broadcast(InProp2);
}

FTbSame1Struct2 UTbSame1SameStruct2InterfaceSimulationClient::GetProp2_Implementation() const
{
	return Prop2;
}

void UTbSame1SameStruct2InterfaceSimulationClient::SetProp2_Implementation(const FTbSame1Struct2& InProp2)
{
	Params params;
	params["prop2"] = InProp2;
	if (GEngine != nullptr)
	{
		UApiGearConnectionManager* AGCM = GEngine->GetEngineSubsystem<UApiGearConnectionManager>();
		AGCM->GetSimulationConnection()->doCall("tb.same1/SameStruct2Interface", "_set", params);
	}
}

FTbSame1SameStruct2InterfaceProp2ChangedDelegate& UTbSame1SameStruct2InterfaceSimulationClient::GetProp2ChangedDelegate()
{
	return Prop2Changed;
}

FTbSame1Struct1 UTbSame1SameStruct2InterfaceSimulationClient::Func1_Implementation(const FTbSame1Struct1& Param1)
{
	Params params;
	params["param1"] = Param1;
	TPromise<FTbSame1Struct1> Promise;
	Async(EAsyncExecution::Thread,
		[params, &Promise]()
		{
			CallResponseFunc GetSameStruct2InterfaceStateFunc = [&Promise](CallResponseArg arg)
			{ Promise.SetValue(arg.result.get<FTbSame1Struct1>()); };
			if (GEngine != nullptr)
			{
				UApiGearConnectionManager* AGCM = GEngine->GetEngineSubsystem<UApiGearConnectionManager>();
				AGCM->GetSimulationConnection()->doCall("tb.same1/SameStruct2Interface", "func1", params, GetSameStruct2InterfaceStateFunc);
			}
		});

	return Promise.GetFuture().Get();
}

FTbSame1Struct1 UTbSame1SameStruct2InterfaceSimulationClient::Func2_Implementation(const FTbSame1Struct1& Param1, const FTbSame1Struct2& Param2)
{
	Params params;
	params["param1"] = Param1;
	params["param2"] = Param2;
	TPromise<FTbSame1Struct1> Promise;
	Async(EAsyncExecution::Thread,
		[params, &Promise]()
		{
			CallResponseFunc GetSameStruct2InterfaceStateFunc = [&Promise](CallResponseArg arg)
			{ Promise.SetValue(arg.result.get<FTbSame1Struct1>()); };
			if (GEngine != nullptr)
			{
				UApiGearConnectionManager* AGCM = GEngine->GetEngineSubsystem<UApiGearConnectionManager>();
				AGCM->GetSimulationConnection()->doCall("tb.same1/SameStruct2Interface", "func2", params, GetSameStruct2InterfaceStateFunc);
			}
		});

	return Promise.GetFuture().Get();
}
